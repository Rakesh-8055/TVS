{
	"name": "PL_UpSert_Enquiry_Test",
	"properties": {
		"activities": [
			{
				"name": "IncrCopyDataActivity",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LUA_MetadataMaxLookup",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LUA_SourceMaxLookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "SELECT * FROM @{pipeline().parameters.tablename}\nWHERE @{pipeline().parameters.watermarkcolname} > convert(datetime,'@{activity('LUA_MetadataMaxLookup').output.firstRow.Prop_0}',121) \nAND @{pipeline().parameters.watermarkcolname} <= convert(datetime,'@{activity('LUA_SourceMaxLookup').output.firstRow.max_created_on}',126)",
							"type": "Expression"
						}
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "SqlServerTable1",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_StagingData",
						"type": "DatasetReference",
						"parameters": {
							"tablename": {
								"value": "@pipeline().parameters.tablename",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "SouceCountLookupActivity",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "LUA_SourceMaxLookup",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "LUA_MetadataMaxLookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "SELECT count(*) as maxcount FROM @{pipeline().parameters.tablename}\nWHERE @{pipeline().parameters.watermarkcolname} > convert(datetime,'@{activity('LUA_MetadataMaxLookup').output.firstRow.Prop_0}',121) \nAND @{pipeline().parameters.watermarkcolname} <= convert(datetime,'@{activity('LUA_SourceMaxLookup').output.firstRow.max_created_on}',126)\n",
							"type": "Expression"
						}
					},
					"dataset": {
						"referenceName": "SqlServerTable1",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "ValidateSourceAndSinkrowsCopiedIfCondition",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "IncrCopyDataActivity",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "SouceCountLookupActivity",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(equals(activity('IncrCopyDataActivity').output.rowsCopied,activity('SouceCountLookupActivity').output.firstRow.maxcount), greater(activity('SouceCountLookupActivity').output.firstRow.maxcount,0))",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "DL_StagingData",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_StagingData",
									"type": "DatasetReference",
									"parameters": {
										"tablename": {
											"value": "@pipeline().parameters.tablename",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "CD_InterData_To_ProdData",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "DF_InterData_MetaData",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFileName": "*",
										"enablePartitionDiscovery": false
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_IntermediateData",
									"type": "DatasetReference",
									"parameters": {
										"tablename": {
											"value": "@pipeline().parameters.tablename",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_ProductionData",
									"type": "DatasetReference",
									"parameters": {
										"tablename": {
											"value": "@pipeline().parameters.tablename",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Delete_InterData",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "CD_InterData_To_ProdData",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_IntermediateData",
									"type": "DatasetReference",
									"parameters": {
										"tablename": {
											"value": "@pipeline().parameters.tablename",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*"
								}
							}
						},
						{
							"name": "CD_ArchiveCopyData",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true,
										"wildcardFileName": "*.parquet"
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_StagingData",
									"type": "DatasetReference",
									"parameters": {
										"tablename": {
											"value": "@pipeline().parameters.tablename",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_Archive_Data",
									"type": "DatasetReference",
									"parameters": {
										"tablename": {
											"value": "@pipeline().parameters.tablename",
											"type": "Expression"
										},
										"year": {
											"value": "@formatDateTime(utcnow(),'yyyy')",
											"type": "Expression"
										},
										"month": {
											"value": "@formatDateTime(utcnow(),'MM')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "DeleteMetadata",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "CD_ArchiveCopyData",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_Metadata",
									"type": "DatasetReference",
									"parameters": {
										"tablename": {
											"value": "@pipeline().parameters.tablename",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.csv"
								}
							}
						},
						{
							"name": "DF_InterData_MetaData",
							"type": "ExecuteDataFlow",
							"dependsOn": [
								{
									"activity": "DeleteMetadata",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "DF_InterData_MetaData",
									"type": "DataFlowReference",
									"datasetParameters": {
										"SourceStagingData": {
											"tablename": {
												"value": "@pipeline().parameters.tablename",
												"type": "Expression"
											}
										},
										"SourceProductiondata": {
											"tablename": {
												"value": "@pipeline().parameters.tablename",
												"type": "Expression"
											}
										},
										"SinkIntermediateData": {
											"tablename": {
												"value": "@pipeline().parameters.tablename",
												"type": "Expression"
											}
										},
										"SinkMetadata": {
											"tablename": {
												"value": "@pipeline().parameters.tablename",
												"type": "Expression"
											}
										}
									}
								},
								"compute": {
									"coreCount": 8,
									"computeType": "General"
								}
							}
						}
					]
				}
			},
			{
				"name": "LUA_MetadataMaxLookup",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": false,
							"wildcardFileName": "*.csv",
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"dataset": {
						"referenceName": "DS_Metadata",
						"type": "DatasetReference",
						"parameters": {
							"tablename": {
								"value": "@pipeline().parameters.tablename",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "LUA_SourceMaxLookup",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": {
							"value": "select max(@{pipeline().parameters.watermarkcolname}) as max_created_on from @{pipeline().parameters.tablename}\n",
							"type": "Expression"
						}
					},
					"dataset": {
						"referenceName": "SqlServerTable1",
						"type": "DatasetReference"
					}
				}
			}
		],
		"parameters": {
			"tablename": {
				"type": "string",
				"defaultValue": "enquiry_test2"
			},
			"watermarkcolname": {
				"type": "string",
				"defaultValue": "created_on"
			}
		},
		"folder": {
			"name": "test_incr_update_data"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}